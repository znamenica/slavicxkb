xkb_keymap {
   xkb_keycodes  { include "evdev+aliases(qwerty)" };
   xkb_types     { include "complete"	};
   xkb_compat    {
      include "complete"
      include "ledscroll(group_lock)"
   };
   xkb_geometry  { include "pc(pc105)"	};

   xkb_symbols   {
      include "pc+psi(as_lat)+psi(as_cyr_std):2+inet(evdev)"
      include "terminate(ctrl_alt_bksp)"
      include "group(lctrl_toggle)"
      include "nbsp(level2)"

//      //modifier_map Lock        { Caps_Lock };
//      //modifier_map Control     { Control_L, Control_R };
//      modifier_map Shift       { Shift_L,      Shift_R   };
//      replace modifier_map Mod4          { Meta_L, Meta_R };
//      replace modifier_map Mod1          { Alt_L, Alt_R };
//      modifier_map Mod2          { Num_Lock };
//      modifier_map Mod3          { Mode_switch                   };
//      // modifier_map Mod5          { Scroll_Lock                   };
//
//      replace key <TLDE> { [ Control_L, Control_R, Meta_L, Meta_R ] };
//      replace key <TAB> { [ Shift_L, Shift_R ] };
//      replace key <CAPS> {
//         type[Group1]="FOUR_LEVEL",
//         symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift ]
//      };
//      // <LALT> as Mod1 -> <LFSH>
//      // Hyper_L, Super_L should be ignored
//      // replace key <LFSH> { [ Alt_L, Alt_R, Meta_L, Meta_R ] };
//      replace key <LFSH> { [ Meta_L, Meta_L ] };
//      // replace key <LFSH> { [ Alt_L, Hyper_L, Super_L, Meta_L ] };
//      // replace key <LFSH> { [ Hyper_L, Hyper_L, Hyper_L, Hyper_L ] };
//      // replace key <LFSH> { [ Hyper_L, Super_L, Meta_L, Multi_key ] };
//      replace key <LCTL> { [ ISO_First_Group, ISO_Last_Group, ISO_Next_Group, ISO_Group_Latch ] };
//      replace key <RALT> { [ Shift_R, Shift_L, Meta_R, Meta_L ] };
//      replace key <RTSH> { [ Tab, ISO_Left_Tab, ISO_Left_Tab, ISO_Left_Tab] };
//      replace key <RCTL> { [ Control_R, Control_L, Meta_R, Meta_L ] };
//
//
      // key <LALT> { [ Alt_L, Meta_L ] };
      // key <RALT> { type[Group1] = "TWO_LEVEL",
      //             symbols[Group1] = [ Alt_R, Meta_R ] };

      key <AB11> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <JPCM> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I120> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <AE13> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I149> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I154> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I168> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I178> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I183> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I184> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <FK19> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <FK24> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I217> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I219> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I221> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I222> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I230> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I247> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I248> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I249> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I250> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I251> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I252> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
      key <I253> { [ NoSymbol, NoSymbol, NoSymbol, NoSymbol ] };
   };
};
